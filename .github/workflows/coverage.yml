name: Code Coverage

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  NODE_VERSION: 20.x
  PNPM_VERSION: 8.x

jobs:
  coverage:
    name: Test Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run tests with coverage
        run: pnpm test:coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage/coverage-final.json
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
          verbose: true

      - name: Check coverage thresholds
        run: |
          # Check if coverage meets minimum thresholds
          # This is a simplified example - adjust based on your coverage tool
          COVERAGE_SUMMARY=$(cat coverage/coverage-summary.json)
          LINES_COV=$(echo $COVERAGE_SUMMARY | jq '.total.lines.pct')
          STATEMENTS_COV=$(echo $COVERAGE_SUMMARY | jq '.total.statements.pct')
          FUNCTIONS_COV=$(echo $COVERAGE_SUMMARY | jq '.total.functions.pct')
          BRANCHES_COV=$(echo $COVERAGE_SUMMARY | jq '.total.branches.pct')
          
          MIN_COVERAGE=80
          
          if (( $(echo "$LINES_COV < $MIN_COVERAGE" | bc -l) )); then
            echo "Lines coverage ($LINES_COV%) is below minimum ($MIN_COVERAGE%)"
            exit 1
          fi
          
          if (( $(echo "$STATEMENTS_COV < $MIN_COVERAGE" | bc -l) )); then
            echo "Statements coverage ($STATEMENTS_COV%) is below minimum ($MIN_COVERAGE%)"
            exit 1
          fi
          
          echo "Coverage check passed!"
          echo "Lines: $LINES_COV%"
          echo "Statements: $STATEMENTS_COV%"
          echo "Functions: $FUNCTIONS_COV%"
          echo "Branches: $BRANCHES_COV%"

  coverage-comment:
    name: Coverage Report
    needs: coverage
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Coverage Report
        uses: romeovs/lcov-reporter-action@v0.2.21
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          lcov-file: './coverage/lcov.info'
          lcov-base-folder: './'
          lcov-prefix: 'packages/'
          lcov-name: 'Coverage Report'
          lcov-fail-under: 80
          lcov-skip-unchanged: true
          lcov-skip-unchanged-files: true
